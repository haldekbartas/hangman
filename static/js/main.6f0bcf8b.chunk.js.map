{"version":3,"sources":["assets/hangman-logo.svg","components/WordLetter.js","components/Word.js","components/AlphaLetter.js","components/Alphabet.js","components/Hangman.js","components/App.js","registerServiceWorker.js","index.js","assets/hangman.svg"],"names":["module","exports","__webpack_require__","p","WordLetter","_ref","letter","react_default","a","createElement","className","Word","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","setCorrectLetters","correctLetters","_this2","_this$props","splittedWord","pickedLetters","wordLetterList","map","index","includes","push","components_WordLetter","key","Component","AlphaLetter","onClick","e","Alphabet","handleClick","event","persist","target","disabled","checkLetter","alphabet","Array","fill","_","i","String","fromCharCode","letterList","components_AlphaLetter","failsLeft","src","hangmanSvg","alt","App","prevState","assign","state","concat","correctCount","win","length","undefined","setState","playAgain","randomWords","toUpperCase","split","myRef","React","createRef","href","ref","hangmanLogo","id","Hangman","components_Word","components_Alphabet","checkWin","checkLose","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6f0bcf8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hangman-logo.68647bdf.svg\";","import React from 'react'\r\n\r\nfunction WordLetter({ letter }) {\r\n    return (\r\n        <div className=\"word-letter-container\">\r\n            <span className=\"word-letter\">{letter}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordLetter;","import React, { Component } from 'react';\r\nimport WordLetter from './WordLetter';\r\n\r\nclass Word extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.correctLetters = [];\r\n    }\r\n\r\n\r\n    componentWillMount = () =>{\r\n        this.props.setCorrectLetters(this.correctLetters);\r\n    }\r\n\r\n    render() {\r\n        const { splittedWord, pickedLetters } = this.props;\r\n\r\n        const wordLetterList = splittedWord.map((letter, index) => {\r\n                if(splittedWord.includes(letter)){\r\n                    if(!this.correctLetters.includes(letter)){\r\n                        this.correctLetters.push(letter);\r\n                    }\r\n                }\r\n            if (pickedLetters.includes(letter)) {\r\n                return <WordLetter key={index} letter={letter} ></WordLetter>\r\n            }\r\n            else {\r\n                return <WordLetter key={index} letter=\" \" ></WordLetter>\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return (\r\n            <div className=\"word\" >\r\n                <div className=\"word-letter-list-container\">\r\n                    {wordLetterList}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Word;","import React from 'react'\r\n\r\n\r\n\r\nfunction AlphaLetter({ letter, onClick }) {\r\n    return (\r\n        <button onClick={(e) => onClick(e, { letter })} className=\"alpha-letter-container\">\r\n            {letter}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AlphaLetter;","import React, { Component } from 'react';\r\nimport AlphaLetter from './AlphaLetter'\r\nclass Alphabet extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.alphabet = new Array(26).fill(1).map((_, i) => String.fromCharCode(65 + i));\r\n    }\r\n\r\n    handleClick = (event, letter) => {\r\n        event.persist();\r\n        event.target.disabled = true;\r\n        this.props.checkLetter(letter.letter);\r\n    }\r\n\r\n    render() {\r\n        const letterList = this.alphabet.map((letter, index) => {\r\n            return (\r\n                <AlphaLetter letter={letter} key={index} onClick={this.handleClick}></AlphaLetter>\r\n            )\r\n        });\r\n\r\n\r\n        return (\r\n            <div className=\"alphabet\">\r\n                <div className=\"letter-list-container\">\r\n                    {letterList}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Alphabet;","import React, { Component } from 'react';\r\nimport hangmanSvg from '../assets/hangman.svg'\r\n\r\nclass Word extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { failsLeft } = this.props;\r\n\r\n        return (\r\n            <div className=\"hangman\" >\r\n                   <img className=\"hangmanSvg\" src={hangmanSvg} alt=\"hangman logo\" />\r\n                   <div className=\"fails\"> Fails left: {failsLeft}    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Word;","import React, { Component } from 'react';\r\nimport Word from './Word';\r\nimport Alphabet from './Alphabet';\r\nimport hangmanSvg from '../assets/hangman.svg'\r\nimport hangmanLogo from '../assets/hangman-logo.svg'\r\nimport Hangman from './Hangman';\r\nimport randomWords from 'random-words'\r\nimport smoothscroll from 'smoothscroll'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      splittedWord: randomWords().toUpperCase().split(''),\r\n      pickedLetters: [],\r\n      correctLetters: [],\r\n      failsLeft: 10,\r\n      correctCount: 0,\r\n      win: undefined,\r\n    };\r\n  }\r\n\r\n\r\n  checkLetter = (letter) => {\r\n    let prevState = Object.assign({}, this.state)\r\n    prevState.pickedLetters = prevState.pickedLetters.concat(letter)\r\n\r\n    if (this.state.splittedWord.includes(letter)) {\r\n      prevState.correctCount++\r\n    }\r\n    else {\r\n      prevState.failsLeft--\r\n    }\r\n\r\n    if(prevState.failsLeft === 0){\r\n      prevState.win = false;\r\n    }\r\n    else if (prevState.correctLetters.length === prevState.correctCount){\r\n      prevState.win = true;\r\n    }\r\n    else{\r\n      prevState.win = undefined;\r\n    }\r\n\r\n    this.setState(prevState)\r\n  }\r\n\r\n  setCorrectLetters = (correctLetters) => {\r\n    this.setState(() => ({\r\n      correctLetters: correctLetters\r\n    })\r\n    )\r\n  }\r\n\r\n  playAgain = () => {\r\n    this.setState({\r\n      splittedWord: randomWords().toUpperCase().split(''),\r\n      pickedLetters: [],\r\n      win: undefined,\r\n      failsLeft: 10,\r\n      correctCount: 0\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.win) {\r\n      return (\r\n        <div className=\"App\">\r\n          <div className=\"game-end\">\r\n          <h1>\r\n            You won the jackpot on lottery called life.\r\n                    </h1>\r\n            <h2>Word '{this.state.splittedWord}'' bringed you good luck.</h2>\r\n          <div className=\"reset-button\" onClick={this.playAgain}><a href=\"#game\"> Another ticket?</a></div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else if (this.state.win == false) {\r\n      return (\r\n        <div className=\"App\">\r\n        <div className=\"game-end\">\r\n          <h1>\r\n            Sorry. You hanged.\r\n          </h1>\r\n          <h1>Word '{this.state.splittedWord}'' was your executor.</h1>\r\n          <div className=\"reset-button\" onClick={this.playAgain}><a href=\"#game\">Die again?</a></div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"App\" ref={this.myRef}>\r\n          <div className=\"hero\">\r\n            <img className=\"hangman-logo\" src={hangmanLogo} alt=\"hangman logo\" />\r\n            <div className=\"play-button\"><a href=\"#game\">Play it cool.</a></div>\r\n          </div>\r\n          <div className=\"game\" id=\"game\">\r\n            <Hangman failsLeft={this.state.failsLeft}></Hangman>\r\n            <Word setCorrectLetters={this.setCorrectLetters} splittedWord={this.state.splittedWord} pickedLetters={this.state.pickedLetters}></Word>\r\n            <Alphabet checkWin={this.checkWin} checkLose={this.checkLose} checkLetter={this.checkLetter} pickedLetters={this.state.pickedLetters}></Alphabet>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './components/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/hangman.97a9ce8e.svg\";"],"sourceRoot":""}